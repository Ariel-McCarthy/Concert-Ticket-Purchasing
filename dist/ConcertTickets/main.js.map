{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/checkout/checkout.component.html","webpack:///./src/app/components/checkout/checkout.component.scss","webpack:///./src/app/components/checkout/checkout.component.ts","webpack:///./src/app/components/concerts/concerts.component.html","webpack:///./src/app/components/concerts/concerts.component.scss","webpack:///./src/app/components/concerts/concerts.component.ts","webpack:///./src/app/components/confirmation/confirmation.component.html","webpack:///./src/app/components/confirmation/confirmation.component.scss","webpack:///./src/app/components/confirmation/confirmation.component.ts","webpack:///./src/app/components/details/details.component.html","webpack:///./src/app/components/details/details.component.scss","webpack:///./src/app/components/details/details.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/signin/siginin.ts","webpack:///./src/app/components/signin/signin.component.html","webpack:///./src/app/components/signin/signin.component.ts","webpack:///./src/app/components/signin/signin.service.ts","webpack:///./src/app/components/thankyou/thankyou.component.html","webpack:///./src/app/components/thankyou/thankyou.component.scss","webpack:///./src/app/components/thankyou/thankyou.component.ts","webpack:///./src/app/services/squaddata.service.ts","webpack:///./src/app/services/ticket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<mat-toolbar>\\r\\n  <a href=\\\"http://localhost:4200/\\\">\\r\\n    <img src=\\\"assets/images/logo.png\\\" alt=\\\"Concert Tickets Logo\\\">\\r\\n  </a>\\r\\n  <div id=\\\"myButtons\\\">\\r\\n    <button mat-button routerLink=\\\"\\\">Home</button>\\r\\n    <button mat-button routerLink=\\\"/concerts\\\">Concerts</button>\\r\\n    <button mat-button routerLink=\\\"/checkout\\\">Checkout</button>\\r\\n    <button mat-button routerLink=\\\"/signin\\\">Logout</button>\\r\\n  </div>\\r\\n\\r\\n</mat-toolbar>\\r\\n<div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"button {\\n  color: #fedc3d;\\n  font-size: 30px;\\n  padding: 15px 32px; }\\n\\nimg {\\n  position: absolute;\\n  left: 10px;\\n  top: 0px; }\\n\\nmat-toolbar {\\n  background-color: black;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n// import 'rxjs/add/operator/finally';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    // logout() {\r\n    //   this.http.post('logout', {}).finally(() => {\r\n    //       this.app.authenticated = false;\r\n    //       this.router.navigateByUrl('/signin');\r\n    //   }).subscribe();\r\n    // }\r\n\r\n}\r\n","import { SquaddataService } from './services/squaddata.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Injectable } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MatButtonModule, MatCheckboxModule, MatToolbarModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpRequest, HttpInterceptor, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageServiceModule} from 'angular-webstorage-service';\r\n\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SignInComponent } from './components/signin/signin.component';\r\nimport { CheckoutComponent } from './components/checkout/checkout.component';\r\nimport { ConcertsComponent } from './components/concerts/concerts.component';\r\nimport { ThankyouComponent } from './components/thankyou/thankyou.component';\r\nimport { DetailsComponent } from './components/details/details.component';\r\nimport { ConfirmationComponent } from './components/confirmation/confirmation.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatCardModule} from '@angular/material/card';\r\n// import { HttpClient } from 'selenium-webdriver/http';\r\nimport { SignInService } from './components/signin/signin.service';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'concerts', component: ConcertsComponent },\r\n  { path: 'checkout', component: CheckoutComponent },\r\n  { path: 'signin', component: SignInComponent },\r\n  { path: 'details', component: DetailsComponent },\r\n  { path: 'confirmation', component: ConfirmationComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ConcertsComponent,\r\n    SignInComponent,\r\n    CheckoutComponent,\r\n    DetailsComponent,\r\n    ThankyouComponent,\r\n    ConfirmationComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    StorageServiceModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n    )\r\n  ],\r\n  providers: [SignInService, SquaddataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<style>\\r\\n  @import url('https://fonts.googleapis.com/css?family=Merriweather|Open+Sans');\\r\\n</style> \\r\\n<head>\\r\\n    <h1>Home Page</h1>\\r\\n</head>\\r\\n<h1>Checkout</h1>\\r\\n<h2>Hello {{ user.username }}, You have ${{ user.funds}}!</h2>\\r\\n<br/> <br/> <br/>\\r\\n<table>\\r\\n\\r\\n    <th colspan=\\\"3\\\">Items in Cart</th>\\r\\n    <th colspan=\\\"2\\\">Amount of Items</th>\\r\\n\\r\\n  <tr *ngFor= \\\"let element of ticket$, let i = index\\\">\\r\\n    <td><img src=\\\"../assets/images/{{ element.artist }}.jpg\\\" alt=\\\"Concert Logo\\\" style=\\\"width:150px; height:100px\\\"/>\\r\\n      <br/><br/>\\r\\n       {{ element.artist }}</td>\\r\\n\\r\\n      <td> {{ element.venue }} </td>\\r\\n      <td>{{ element.date }}</td>\\r\\n\\r\\n      <td>Tickets In Cart: <input type= number matInput placeholder=\\\"{{amount[i]}}\\\"> <br/> Price for each: ${{ element.price }}\\r\\n</td>\\r\\n  </tr>\\r\\n  </table>\\r\\n  <h3>Your total: {{ total }}</h3>\\r\\n  <div id=\\\"button2\\\">\\r\\n      <span><button mat-button (click)=\\\"verifyPurchase()\\\">Confirm Purchase</button></span>\\r\\n  </div>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"h1, h2 {\\n  text-align: center; }\\n\\ntable {\\n  font-family: Merriweather, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%; }\\n\\ntd, th {\\n  border: 1px solid #c2bcbc;\\n  text-align: left;\\n  padding: 8px; }\\n\\ntr:nth-child(even) {\\n  background-color: #c7c6c6;\\n  color: black; }\\n\\nbutton {\\n  background-color: black;\\n  color: #fedc3d; }\\n\\n#button2 {\\n  display: flex;\\n  justify-content: center; }\\n\\nspan {\\n  padding: 20px; }\\n\"","import { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SquadMember } from './../../models/squad-member';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SquaddataService } from '../../services/squaddata.service';\r\nimport { SignInService } from '../signin/signin.service';\r\nimport { SignIn } from '../signin/siginin';\r\nimport { Ticket } from './../../models/ticket';\r\nimport { TicketService } from './../../services/ticket.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.scss']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  ticket$:  Ticket[];\r\n  user: SignIn;\r\n  checkname: Object;\r\n  message: String;\r\n  total: number;\r\n  amount: number[];\r\n\r\n  constructor(private squadService: SquaddataService, private app: SignInService,\r\n    private http: HttpClient, private router: Router, private ticketService: TicketService) {\r\n      this.ticket$ = ticketService.getTickets();\r\n      this.amount = ticketService.getCart();\r\n      this.total = 0;\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n    this.app.currentMessage.subscribe(message => this.message = message);\r\n      if (this.message === 'x') {\r\n        this.router.navigate(['../signin']);\r\n      }\r\n      this.user = this.app.passUser();\r\n      for (let i = 0; i < this.ticket$.length; i++) {\r\n        this.total += (this.ticket$[i].price * this.amount[i]);\r\n      }\r\n      console.log(this.total);\r\n\r\n  }\r\n\r\n  verifyPurchase() {\r\n    if (this.app.takeMoney(this.total)) {\r\n      if (this.ticketService.takeStock(this.amount)) {\r\n        this.router.navigate(['/confirmation']);\r\n      }\r\n    }\r\n    this.user = this.app.passUser();\r\n    console.log(this.user);\r\n  }\r\n\r\n}\r\n","module.exports = \"<head>\\r\\n  <h1>Concerts Page</h1>\\r\\n</head>\\r\\n<body>\\r\\n  <h1>Concerts</h1>\\r\\n  <h2>Hello {{ user.username }}, You have ${{ user.funds }}!</h2>\\r\\n  <div *ngFor=\\\"let element of ticket$\\\"> \\r\\n    <mat-card>\\r\\n      <mat-card-title>{{ element.artist }}</mat-card-title>\\r\\n        <img src=\\\"../assets/images/{{ element.artist }}.jpg\\\" alt=\\\"Test Concert\\\" width=\\\"200\\\" height=\\\"150\\\">\\r\\n        <mat-card-actions>\\r\\n          <span>Price: ${{ element.price }}</span>\\r\\n          <span>Amount:\\r\\n            <select id=\\\"{{ element.artist }}\\\">\\r\\n              <option *ngFor=\\\"let option of createRange(element.stock);\\\" value = {{option}}>{{option}}</option>\\r\\n            </select>\\r\\n          </span>\\r\\n          <span>Stock: {{ element.stock }}</span>\\r\\n          <!-- {{ resetStock() }}\\r\\n          <span>Stock: {{ element.stock }}</span>\\r\\n          <span>Amount: <input type=number required [(ngModel)]=\\\"amount\\\" matInput placeholder=\\\"0\\\"></span> -->\\r\\n          <span><button mat-button (click)=\\\"addCart(element, amount)\\\" >Add to Cart</button></span>\\r\\n          <span><button mat-button (click)=\\\"addTicket(element)\\\" routerLink=\\\"/details\\\">Details</button></span>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n    <br>\\r\\n  </div>\\r\\n</body>\\r\\n\"","module.exports = \"h1, h2 {\\n  text-align: center; }\\n\\nmat-card {\\n  background-color: #fedc3d; }\\n\\n#head {\\n  color: #fedc3d;\\n  font-size: 20px; }\\n\\nbutton {\\n  background-color: black;\\n  color: #fedc3d; }\\n\\nspan {\\n  font: bold;\\n  padding: 20px; }\\n\\ndiv {\\n  position: relative;\\n  padding-left: 300px;\\n  padding-right: 300px; }\\n\"","import { element } from 'protractor';\r\nimport { Ticket } from './../../models/ticket';\r\nimport { TicketService } from './../../services/ticket.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SquadMember } from './../../models/squad-member';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {LOCAL_STORAGE, WebStorageService} from 'angular-webstorage-service';\r\nimport { SignInComponent } from './../signin/signin.component';\r\nimport { ObservableLike } from 'rxjs';\r\nimport { SignInService } from '../signin/signin.service';\r\nimport { SignIn } from '../signin/siginin';\r\nimport { SquaddataService } from '../../services/squaddata.service';\r\nimport { Router } from '@angular/router';\r\nimport { throwMatDuplicatedDrawerError } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-concerts',\r\n  templateUrl: './concerts.component.html',\r\n  styleUrls: ['./concerts.component.scss']\r\n})\r\n\r\n\r\nexport class ConcertsComponent implements OnInit {\r\n  public data: any = [];\r\n  user: SignIn;\r\n  checkname: Object;\r\n  message: String;\r\n  ticket$: Ticket[];\r\n  cart$: TicketService[];\r\n  amount: number[];\r\n  options: number [];\r\n  // constructor(private squadService: SquaddataService, private ticketService: TicketService) { }\r\n  constructor(@Inject(LOCAL_STORAGE) private storage: WebStorageService,\r\n  private app: SignInService, private http: HttpClient, private router: Router,\r\n  private squadService: SquaddataService, private ticketService: TicketService) { }\r\n\r\n  ngOnInit() {\r\n    this.squadService.getData().subscribe(\r\n      squadService => this.ticket$ = squadService\r\n    );\r\n    this.app.currentMessage.subscribe(message => this.message = message);\r\n    if (this.message === 'x') {\r\n      this.router.navigate(['../signin']);\r\n    }\r\n    this.user = this.app.passUser();\r\n  }\r\n\r\n  public createRange(num: number) {\r\n    this.options = [];\r\n    for (let i = 1; i <= num; i++) {\r\n      this.options.push(i);\r\n    }\r\n    return this.options;\r\n  }\r\n\r\n  public addCart(product: Ticket, amount: number) {\r\n    const inputElement = <HTMLInputElement> document.getElementById(product.artist);\r\n    console.log(inputElement.value);\r\n    amount = Number(inputElement.value);\r\n    this.ticketService.addTicket(product, amount);\r\n    this.ticketService.pushCart(amount);\r\n\r\n  }\r\n\r\n  public addTicket(product: Ticket) {\r\n    this.ticketService.oneTicket(product);\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1>Confirmation Page</h1>\\r\\n<br>\\r\\n<br>\\r\\n<div *ngFor=\\\"let element of cart\\\"> \\r\\n    <mat-card >\\r\\n      <mat-card-title>{{ element.artist }}</mat-card-title>\\r\\n        <img src=\\\"../assets/images/{{ element.artist }}.jpg\\\" alt=\\\"Test Concert\\\" width=\\\"200\\\" height=\\\"150\\\">\\r\\n        <mat-card-actions>\\r\\n          <span>Price: {{ element.price }}</span>\\r\\n          <span>Quantity: {{ element.quantity }}</span>  \\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n    <br>\\r\\n</div>\\r\\n<h3>Your order as been completed!</h3>\\r\\n<h3>Enjoy your concert</h3>\\r\\n<span><button mat-button routerLink=\\\"/checkout\\\">Cancel Purchase</button></span>\\r\\n<!-- Include a function to delete stock and minus money amount on customer -->\\r\\n<span><button id=\\\"confirm\\\" mat-button routerLink=\\\"/\\\" (click)=\\\"updateCart()\\\">Confirm</button></span>\\r\\n\"","module.exports = \"h1 {\\n  text-align: center; }\\n\\nh3 {\\n  text-align: center; }\\n\\nbutton {\\n  background-color: red;\\n  color: White; }\\n\\n#confirm {\\n  background-color: green;\\n  color: White; }\\n\\nmat-card {\\n  background-color: #fedc3d; }\\n\\nspan {\\n  padding: 20px; }\\n\\ndiv {\\n  position: relative;\\n  padding-left: 300px;\\n  padding-right: 300px; }\\n\"","import { SquaddataService } from './../../services/squaddata.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TicketService } from 'src/app/services/ticket.service';\r\nimport { Ticket } from './../../models/ticket';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.scss']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n  cart: Ticket[];\r\n\r\n  constructor(private ticketService: TicketService, private squadService: SquaddataService) {\r\n    this.cart = ticketService.getTickets();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resetCart() {\r\n    this.ticketService.resetTickets();\r\n  }\r\n\r\n  updateCart() {\r\n    for (const tick of this.cart) {\r\n      this.updateDatabase(tick);\r\n    }\r\n    this.resetCart();\r\n  }\r\n\r\n  updateDatabase(ticket: Ticket) {\r\n    this.squadService.setData(ticket);\r\n  }\r\n\r\n}\r\n","module.exports = \"<head>\\r\\n  <h1>Details Page</h1>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n  <h1>Details</h1>\\r\\n  <div>\\r\\n    <mat-card>\\r\\n        <mat-card-title>{{ ourTicket.artist }}</mat-card-title>\\r\\n          <img src=\\\"../assets/images/{{ ourTicket.artist }}.jpg\\\" alt=\\\"Concert Image\\\" width=\\\"650\\\" height=\\\"400\\\">\\r\\n          <span>\\r\\n            <h2>Concert Info: {{ ourTicket.description }}</h2>\\r\\n          </span>\\r\\n          <mat-card-actions>\\r\\n            <span>Price: ${{ ourTicket.price }}</span>\\r\\n            <span>Amount: <input input type=number required [(ngModel)]=\\\"amount\\\" matInput placeholder=\\\"1\\\"></span>\\r\\n            <span>Stock: {{ ourTicket.stock }}</span>\\r\\n            <span><button mat-button (click)=\\\"addCart(ourTicket,amount)\\\">Add to Cart</button></span>\\r\\n          </mat-card-actions>\\r\\n      </mat-card>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\"","module.exports = \"h1 {\\n  text-align: center; }\\n\\nmat-card {\\n  background-color: #fedc3d; }\\n\\n#head {\\n  color: #fedc3d;\\n  font-size: 20px; }\\n\\nbutton {\\n  background-color: black;\\n  color: #fedc3d; }\\n\\nspan {\\n  padding: 20px; }\\n\\ndiv {\\n  position: relative;\\n  padding-left: 300px;\\n  padding-right: 300px; }\\n\"","import { Ticket } from './../../models/ticket';\r\nimport { TicketService } from './../../services/ticket.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.scss']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n  ourTicket: Ticket;\r\n  amount: number;\r\n\r\n  constructor(private ticketService: TicketService) { }\r\n\r\n  ngOnInit() {\r\n    this.ourTicket = this.ticketService.getMyTicket();\r\n  }\r\n\r\n\r\n  public addCart(product: Ticket, amount: number) {\r\n    this.ticketService.addTicket(product, amount);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<head>\\r\\n  <h1>Home Page</h1>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n  <h1>Welcome to Concert Tickets!</h1>\\r\\n  <div *ngIf=\\\"message ==='x'\\\">\\r\\n  <button mat-button routerLink=\\\"/signin\\\">Sign In To Shop!</button>\\r\\n</div> \\r\\n  <h2>Hello {{ user.username }}, You have ${{ user.funds}}!</h2>\\r\\n  <div id=\\\"concert\\\">\\r\\n    <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"500px\\\">\\r\\n      <mat-grid-tile>\\r\\n        <mat-grid-tile-header>\\r\\n          <h1 id=\\\"head\\\">Concert of the Day</h1>\\r\\n        </mat-grid-tile-header>\\r\\n        <img src=\\\"../assets/images/Boy Pablo.jpg\\\" alt=\\\"Test Concert\\\" width=\\\"650\\\" height=\\\"400\\\">\\r\\n        <mat-grid-tile-footer>\\r\\n          <h1 id=\\\"foot\\\">\\r\\n            <a routerLink=\\\"/concerts\\\">Checkout More Concerts!</a>\\r\\n          </h1>\\r\\n        </mat-grid-tile-footer>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\"","module.exports = \"mat-grid-tile {\\n  background: white; }\\n\\nbutton {\\n  background-color: black;\\n  color: #fedc3d; }\\n\\nmat-grid-tile-header {\\n  justify-content: center;\\n  background-color: black; }\\n\\nmat-grid-tile-footer {\\n  justify-content: center; }\\n\\n#head {\\n  color: #fedc3d;\\n  font-size: 30px; }\\n\\n#foot {\\n  color: black;\\n  font-size: 20px; }\\n\\na:link {\\n  color: black;\\n  text-decoration: none; }\\n\\na:visited {\\n  color: #fedc3d;\\n  text-decoration: none; }\\n\\na:hover {\\n  color: #fedc3d;\\n  text-decoration: none; }\\n\\na:active {\\n  color: black;\\n  text-decoration: none; }\\n\\n#concert {\\n  position: relative;\\n  padding-left: 400px;\\n  padding-right: 400px; }\\n\\nh1, h2 {\\n  text-align: center; }\\n\\nimg {\\n  max-width: 100%; }\\n\\n.container {\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.img-container {\\n  position: absolute;\\n  left: 0;\\n  opacity: 0;\\n  height: auto !important;\\n  background-size: cover;\\n  background-position: center;\\n  will-change: opacity;\\n  transition: opacity .3s;\\n  cursor: pointer; }\\n\\n.slide-button:hover, .slide-button-select {\\n  width: 64px !important;\\n  background-color: white !important;\\n  pointer-events: none;\\n  transition: background-color 0.4s, width 4s cubic-bezier(0.19, 1, 0.22, 1) !important; }\\n\\n.slide-button {\\n  width: 30px;\\n  height: 4px;\\n  background-color: rgba(255, 255, 255, 0.5);\\n  cursor: pointer;\\n  position: absolute; }\\n\\n.slider {\\n  position: absolute;\\n  top: 50%;\\n  right: 80px;\\n  opacity: 1;\\n  min-width: 30px; }\\n\\n.slide-button-parent-container {\\n  position: relative;\\n  margin: 22px 0;\\n  min-height: 4px; }\\n\\n.select-box {\\n  min-height: 10px; }\\n\\n.text-container {\\n  height: 100vh;\\n  justify-content: center;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column; }\\n\\n.page-text {\\n  min-height: 373px;\\n  width: 50%;\\n  height: 100%;\\n  opacity: 0;\\n  font-weight: 300;\\n  font-size: 90px;\\n  color: white; }\\n\\n.selected {\\n  opacity: 1;\\n  transition: 1s; }\\n\"","import { SignInComponent } from './../signin/signin.component';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ObservableLike } from 'rxjs';\r\nimport { SignInService } from '../signin/signin.service';\r\nimport { SignIn } from '../signin/siginin';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  user: SignIn;\r\n  checkname: Object;\r\n  message: string;\r\n\r\n  constructor(private app: SignInService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.app.currentMessage.subscribe(message => this.message = message);\r\n    this.user = this.app.passUser();\r\n    console.log(this.user);\r\n    /*\r\n    if (this.message === 'x') {\r\n      this.router.navigate(['../signin']);\r\n    }\r\n    */\r\n  }\r\n\r\n  newMessage() {\r\n    this.app.changeMessage('Hello from Sibling');\r\n  }\r\n\r\n}\r\n","export class SignIn {\r\n    username: string;\r\n    funds: number;\r\n}\r\n","module.exports = \"<h1>Sign In</h1>\\r\\n\\r\\n<br/>\\r\\n\\r\\n<mat-card class=\\\"signIn\\\">\\r\\n  <mat-card-header>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <form class=\\\"form\\\">\\r\\n      <table class=\\\"signIn\\\" cellspacing=\\\"0\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"myUser\\\" name=\\\"username\\\" required>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n        <input placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n        </tr>\\r\\n      </table>\\r\\n      <mat-card-actions>\\r\\n          <button mat-raised-button (click)=\\\"login()\\\" color=\\\"yellow\\\">Login</button>\\r\\n        </mat-card-actions>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { SignInService } from './signin.service';\r\nimport { SignIn } from './siginin';\r\nimport { ObservableLike } from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './signin.component.html'\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  myUser: string;\r\n  makeUser: SignIn;\r\n  checkname: Object;\r\n  message: String;\r\n  errorMessage: string;\r\n\r\n  constructor(private app: SignInService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.app.changeMessage('x');\r\n    this.app.currentMessage.subscribe(message => this.message = message);\r\n  }\r\n\r\n\r\n  login() {\r\n    this.app.getUser(this.myUser).subscribe(data => this.checkname = data);\r\n    console.log(this.checkname);\r\n     if (this.checkname[0] == null) {\r\n      alert('Invalid Login!');\r\n      // this.router.navigate(['../']);\r\n     } else {\r\n      this.app.changeMessage(this.myUser);\r\n      this.app.makeUser(this.myUser, this.checkname[0].funds);\r\n      this.makeUser = this.app.passUser();\r\n      // console.log(this.myUser);\r\n      this.router.navigate(['../']);\r\n    }\r\n     return false;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SignIn } from './siginin';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignInService {\r\n\r\n  private baseUrl = 'https://team17userdb.herokuapp.com/';\r\n  private user = new SignIn;\r\n  private messageSource = new BehaviorSubject('x');\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.user.username = '';\r\n    this.user.funds = 0;\r\n  }\r\n\r\n  getUser(username: String): Observable<Object> {\r\n    return this.http.get(`${this.baseUrl}signin/${username}`);\r\n  }\r\n\r\n  makeUser(username: string, funds: number) {\r\n    this.user.username = username;\r\n    this.user.funds = funds;\r\n  }\r\n\r\n  passUser(): SignIn {\r\n    return this.user;\r\n  }\r\n\r\n  takeMoney(total: number): boolean {\r\n    console.log(total);\r\n    if (this.user.funds < total) {\r\n      alert('Insufficent funds! Get back to work shorty');\r\n      return false;\r\n    } else {\r\n      this.user.funds -= total;\r\n      console.log(this.user.funds);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  changeMessage(message: string) {\r\n    this.messageSource.next(message);\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  thankyou works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-thankyou',\r\n  templateUrl: './thankyou.component.html',\r\n  styleUrls: ['./thankyou.component.scss']\r\n})\r\nexport class ThankyouComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Ticket } from './../models/ticket';\r\nimport { SquadMember } from '../models/squad-member';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SquaddataService {\r\n  URL: string;\r\n  ticketBase: Ticket[];\r\n  checkBase: Object;\r\n  private cartSource = new BehaviorSubject('x');\r\n  currentMessage = this.cartSource.asObservable();\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    console.log('squad is working');\r\n    this.URL = '';\r\n    this.ticketBase = [];\r\n    this.checkBase = [];\r\n  }\r\n  getSquad() {\r\n    return this.httpClient.get<Array<SquadMember>>(\r\n      'https://api.myjson.com/bins/14g5si');\r\n  }\r\n  getMockData()  {\r\n    return this.httpClient.get<Array<Ticket>>(\r\n      '../assets/dbMock.json');\r\n  }\r\n  getData()  {\r\n    return this.httpClient.get<Array<Ticket>>(\r\n      'https://team17-ticketservice.herokuapp.com/ConcertTickets');\r\n  }\r\n  setData(ticket: Ticket) {\r\n    return this.httpClient.put<Array<Ticket>>(\r\n      'https://team17-checkoutsvc.herokuapp.com/ConcertTickets/' + ticket.id, ticket);\r\n  }\r\n}\r\n","import { Ticket } from './../models/ticket';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { OnInit} from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n  private tickets: Ticket[];\r\n  private myTicket: Ticket;\r\n  amount: number [];\r\n  constructor() {\r\n    this.tickets = [];\r\n    this.amount = [];\r\n  }\r\n\r\n  getTickets(): Ticket[] {\r\n    return this.tickets;\r\n  }\r\n\r\n  addTicket(newTick: Ticket, amount: number) {\r\n    if (this.tickets.includes(newTick)) {\r\n    //  this.tickets[this.index].inCart = this.tickets[this.index].inCart + amount;\r\n    } else {\r\n    //  newTick.inCart += amount;\r\n      this.tickets.push(newTick);\r\n    }\r\n  }\r\n\r\n  // TODO::DETIALS\r\n  oneTicket(newTick: Ticket) {\r\n    this.myTicket = newTick;\r\n  }\r\n\r\n  getMyTicket(): Ticket {\r\n    return this.myTicket;\r\n  }\r\n\r\n  public pushCart(amount: number) {\r\n    this.amount.push(amount);\r\n  }\r\n\r\n  public getCart(): number[] {\r\n    return this.amount;\r\n  }\r\n\r\n  takeStock(amount: number[]): boolean {\r\n    for (let i = 0; i < amount.length; i++) {\r\n      if (amount[i] > this.tickets[i].stock) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < amount.length; j++) {\r\n      this.tickets[j].stock -= amount[j];\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  resetTickets() {\r\n    this.tickets = [];\r\n  }\r\n\r\n\r\n\r\n  // TO-DO attach heroku link to ticketssvc here\r\n  // private baseURL = 'herokuapp.com/whatever';\r\n  // private baseURL = 'https://team17-ticketservice.herokuapp.com/ConcertTickets';\r\n  // allTickets: Ticket[];\r\n  // constructor(private http: HttpClient) { }\r\n\r\n  // getTicketsList(): Observable<any> {\r\n  //   return this.http.get<Array<Ticket>>(`${this.baseURL}`);\r\n  // }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}